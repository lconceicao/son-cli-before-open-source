$schema: http://json-schema.org/draft-04/schema#
additionalProperties: false
definitions:
  bandwidth_units:
    enum: [bps, kbps, Mbps, Gbps, Tbps]
  frequency_units:
    enum: [Hz, kHz, MHz, GHz, THz]
  general_units:
    enum: [Percentage]
  images_formats:
    enum: [raw, vhd, vmdk, vdi, iso, qcow2, docker, ova, ovf, bare]
  interfaces:
    enum: [interface]
  memory_units:
    enum: [B, kB, KiB, MB, MiB, GB, GiB, TB, TiB, PT, PiT]
  monitoring:
    additionalProperties: false
    properties:
      frequency: {description: The sample rate of the monitoring parameter., exclusiveMinimum: true,
        minimum: 0, type: number}
      frequency_unit: {$ref: '#/definitions/frequency_units', default: Hz, description: The
          unit of the sample frequency.}
      name: {description: The name of the parameter to monitor. The name has to be
          supported by the service platform or the FSM., pattern: '^[A-Za-z-_]+$',
        type: string}
      unit:
        description: The unit used to monitor (or represent) the parameter.
        oneOf:
        - {$ref: '#/definitions/general_units'}
        - {$ref: '#/definitions/memory_units'}
        - {$ref: '#/definitions/bandwidth_units'}
        - {$ref: '#/definitions/frequency_units'}
    required: [name, unit]
    type: object
description: The core schema for SONATA network function descriptors.
properties:
  author: {description: The person or organization that created the VNF descriptor.,
    type: string}
  connection_points:
    description: The connection points of the overall VNF, that connects the VNF to
      the external world.
    items:
      additionalProperties: false
      properties:
        id: {description: A VNF-unique id of the connection point. Can be used for
            references., type: string}
        type: {$ref: '#/definitions/interfaces', description: 'The type of connection
            point, such as a virtual port, a virtual NIC address, a physical port,
            a physcial NIC address, or the endpoint of a VPN tunnel.'}
        virtual_link_reference: {description: 'A reference to a virtual link, i.e.
            the virtual_links:id.', type: string}
      required: [id, type]
      type: object
    minItems: 1
    type: array
    uniqueItems: true
  deployment_flavours:
    description: The flavours of the VNF that can be deployed.
    items:
      additionalProperties: false
      properties:
        assurance_parameters:
          items:
            additionalProperties: false
            properties:
              formula: {type: string}
              id: {type: string}
              penalty:
                additionalProperties: false
                properties:
                  expression: {type: integer}
                  type: {type: string}
                  unit: {type: string}
                  validity: {type: string}
                type: object
              rel_id: {type: string}
              unit: {type: string}
              value: {type: integer}
              violation:
                items:
                  additionalProperties: false
                  properties:
                    breaches_count: {type: integer}
                    interval: {type: integer}
                  type: object
                type: array
            type: object
          type: array
        constraint: {type: string}
        flavour_key: {type: string}
        id: {type: string}
        vdu_reference:
          items: {type: string}
          type: array
        vlink_reference:
          items: {type: string}
          type: array
      type: object
    type: array
  description: {description: A longer description of the network function., type: string}
  descriptor_version: {description: The version of the description definition used
      to describe the function descriptor., pattern: '^[A-Za-z0-9\-_.]+$', type: string}
  lifecycle_events:
    items:
      additionalProperties: false
      properties:
        authentication: {type: string}
        authentication_type: {type: string}
        authentication_username: {type: string}
        driver: {type: string}
        events:
          additionalProperties: false
          properties:
            restart:
              additionalProperties: false
              properties:
                command: {type: string}
                template_file: {type: string}
                template_file_format: {type: string}
              type: object
            scale-in:
              additionalProperties: false
              properties:
                command: {type: string}
                template_file: {type: string}
                template_file_format: {type: string}
              type: object
            scale-out:
              additionalProperties: false
              properties:
                command: {type: string}
                template_file: {type: string}
                template_file_format: {type: string}
              type: object
            start:
              additionalProperties: false
              properties:
                command: {type: string}
                template_file: {type: string}
                template_file_format: {type: string}
              type: object
            stop:
              additionalProperties: false
              properties:
                command: {type: string}
                template_file: {type: string}
                template_file_format: {type: string}
              type: object
          type: object
        flavor_id_ref: {type: string}
        vnf_container: {type: string}
      type: object
    type: array
  name: {description: The name of the function description., pattern: '^[a-z0-9\-_.]+$',
    type: string}
  vendor: {description: The vendor id allows to identify a VNF descriptor uniquely
      across all function descriptor vendors., pattern: '^[a-z0-9\-_.]+$', type: string}
  version: {description: The version of the function descriptor., pattern: '^[0-9\-_.]+$',
    type: string}
  virtual_deployment_units:
    description: The virtual deployment units (VDUs) of the virtual network function.
    items:
      additionalProperties: false
      properties:
        connection_points:
          description: The connection points of this VDU. Connects the VDU ot other
            VDUs or the external world.
          items:
            additionalProperties: false
            properties:
              id: {description: A VNF-unique id of the connection point. Can be used
                  for references., type: string}
              type: {$ref: '#/definitions/interfaces', description: 'The type of connection
                  point, such as a virtual port, a virtual NIC address, a physical
                  port, a physcial NIC address, or the endpoint of a VPN tunnel.'}
              virtual_link_reference: {description: 'A reference to a virtual link,
                  i.e. the virtual_links:id.', type: string}
            required: [id, type]
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        description: {description: 'An arbitrary description of the VDU:', type: string}
        id: {description: A unique identifier of this VDU within the scope of this
            VNF descriptor., type: string}
        monitoring_parameters:
          description: The various metrics and parameters to monitor.
          items: {$ref: '#/definitions/monitoring', description: A specific monitoring
              metric or parameter.}
          type: array
        resource_requirements:
          additionalProperties: false
          description: The requirments of a (virtual) machine that hosts this VDU.
            The service platform has to provide machines that meet these requirements.
          properties:
            cpu:
              description: All the requirements and parameters related to the (virtual)
                CPU.
              properties:
                cpu_support_accelerator: {type: string}
                vcpus: {description: The number of (virtualized) CPU cores., exclusiveMinimum: true,
                  minimum: 0, type: integer}
              required: [vcpus]
              type: object
            hypervisor_parameters:
              description: The requirements and parameters of a (potential) hyperviser
                that operates the VDU VM.
              properties:
                type: {description: The type of hypervisor needed for this VDU., type: string}
                version: {description: The version of the hypervisor needed for this
                    VDU., pattern: '^(== |>= |<= |!= )?[0-9\-_.]+$', type: string}
              type: object
            memory:
              additionalProperties: false
              properties:
                large_pages_required: {description: States whether large memory pages
                    are required or not., type: boolean}
                numa_allocation_policy: {description: Names the NUMA allocaton policy.,
                  type: string}
                size: {description: The size of the memory for this VDU., exclusiveMinimum: true,
                  minimum: 0, type: number}
                size_unit: {$ref: '#/definitions/memory_units', default: MB, description: The
                    unit the host memory is measured in. Default is MB (Megabyte).}
              required: [size]
              type: object
            network:
              properties:
                data_processing_acceleration_library: {description: The name of the
                    data processing acceleration library., type: string}
                network_interface_bandwidth: {description: The size of the bandwidth
                    for this VDU., exclusiveMinimum: true, minimum: 0, type: number}
                network_interface_bandwidth_unit: {$ref: '#/definitions/bandwidth_units',
                  description: The unit of the network interface bandwidth. Default
                    is bps (bit per second).}
                network_interface_card_capabilities:
                  description: 'Additional NIC capabilities:'
                  properties:
                    SR-IOV: {description: States whether this VDU requires Single
                        Root I/O Virtualization on this NIC., type: boolean}
                    mirroring: {description: States whether the traffic is mirrored
                        or not., type: boolean}
                  type: object
              type: object
            pcie:
              description: The PCIe parameters of the platform.
              properties:
                SR-IOV: {description: States whether this VDU requires Single Root
                    I/O Virtualization on this PCI entity., type: boolean}
                device_pass_through: {description: States whether this PCI entity
                    MUST support PCI pass through., type: boolean}
              type: object
            storage:
              additionalProperties: false
              properties:
                persistence: {description: States whether this is persistent storage
                    or not., type: boolean}
                size: {description: The size of the storage for this VDU., exclusiveMinimum: true,
                  minimum: 0, type: number}
                size_unit: {$ref: '#/definitions/memory_units', default: MB, description: The
                    unit the host storage is measured in. Default is MB (Megabyte).}
              required: [size]
              type: object
            vswitch_capabilities:
              properties:
                overlay_tunnel: {type: string}
                type: {description: The type of vswitch to use., type: string}
                version: {description: The version of vswitch to use., pattern: '^(==
                    |>= |<= |!= )?[0-9\-_.]+$', type: string}
              type: object
          required: [cpu, memory]
          type: object
        scale_in_out:
          additionalProperties: false
          description: The scale-in/scale-out parameters.
          properties:
            maximum: {default: 1, description: The maximum number of VDUs instantiated
                at any time. 0 means unlimited., minimum: 0, type: integer}
            minimum: {default: 1, description: The minimum number of VDUs instantiated
                at any time., minimum: 0, type: integer}
          type: object
        vm_image: {description: The reference to a virtual machine image., type: string}
        vm_image_format: {$ref: '#/definitions/images_formats', description: The format
            of the virtual machine image.}
        vm_image_md5: {description: An MD5 hash of the virtual machine image., pattern: '^[A-Fa-f0-9]{32}$',
          type: string}
      required: [id, resource_requirements]
      type: object
    minItems: 1
    type: array
    uniqueItems: true
  virtual_links:
    description: VNF internal virtual link. A link interconnects at least two connection
      points.
    items:
      additionalProperties: false
      properties:
        access: {type: boolean}
        connection_points_reference:
          description: The references to the connection points connected to this virtual
            link.
          items: {minItems: 2, type: string, uniqueItems: true}
          type: array
        connectivity_type:
          description: The connectivity type, such as point-to-point, point-to-multipoint,
            and multipoint-to-multipoint.
          enum: [E-Line, E-Tree, E-LAN]
        dhcp: {type: boolean}
        external_access: {type: boolean}
        id: {description: A VNF-unique id of the virtual link. Can be used for references.,
          type: string}
        leaf_requirement: {type: string}
        qos: {type: string}
        root_requirement: {type: string}
      required: [id, connectivity_type, connection_points_reference]
      type: object
    type: array
required: [descriptor_version, vendor, name, version, virtual_deployment_units]
type: object
